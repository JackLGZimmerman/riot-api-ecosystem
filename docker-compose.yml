# Docker Compose for Redis and MongoDB
version: "3.8"

services:
  redis:
    image: redis:7-alpine
    container_name: fifth_time_lucky_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    networks:
      - fifth_time_lucky_network
    restart: unless-stopped

  mongodb:
    image: mongo:7
    container_name: fifth_time_lucky_mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE:-fifth_time_lucky}
    networks:
      - fifth_time_lucky_network
    restart: unless-stopped

  mongo-express:
    image: mongo-express:latest
    container_name: fifth_time_lucky_mongo_express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD:-password}
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-admin}
    depends_on:
      - mongodb
    networks:
      - fifth_time_lucky_network
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: fifth_time_lucky_redis_commander
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD:-}
    depends_on:
      - redis
    networks:
      - fifth_time_lucky_network
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  mongo_data:
    driver: local
  mongo_config:
    driver: local

networks:
  fifth_time_lucky_network:
    driver: bridge
